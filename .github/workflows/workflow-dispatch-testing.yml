name: Solar System workflow

on:
  push:
    branches:
      - main
      - 'feature/*'
  workflow_dispatch:
    inputs:
          environment:
            description: 'Deployment environment (e.g., dev, staging, prod)'
            required: true
            default: 'dev'
          version:
            description: 'Application version to deploy'
            required: false
            default: 'latest']

        # #
        # env:
        # MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
        # MONGO_USERNAME: superuser
        # MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}

        # jobs:
        #     unit-testing:
        #         name: Unit Testing
        #         continue-on-error: true
        #         runs-on: ubuntu-latest
        #         steps:
        #         - name: Checkout Repository
        #         uses: actions/checkout@v4

        #         - name: Setup NodeJS Version - ${{ matrix.nodejs-version }}
        #         uses: actions/setup-node@v3
        #         with:
        #             node-version: ${{ matrix.nodejs-version }}

        #         - name: Cache Node Modules
        #         uses: actions/cache@v4
        #         with:
        #             path: node_modules
        #             key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
            
        #         - name: Install Dependencies
        #         run: npm install
        #     #
        #         - name: Unit Testing
        #         run: npm test

        #         - name: Archive Test Result
        #         uses: actions/upload-artifact@v4
        #         with:
        #             name: Mocha-Test-Resultss
        #             path: test-results.xml

        #     code-coverage:
        #         name: Code Coverage
        #         needs: [unit-testing]
        #         continue-on-error: true
        #         runs-on: ubuntu-latest
        #         steps:
        #         - name: Checkout Repository
        #         uses: actions/checkout@v4

        #         - name: Setup NodeJS Version
        #         uses: actions/setup-node@v3
        #         with:
        #             node-version: 18

        #         - name: Cache Node Modules
        #         uses: actions/cache@v4
        #         with:
        #             path: node_modules
        #             key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
            
        #         - name: Install Dependencies
        #         run: npm install
            
        #         - name: Run Code Coverage
        #         continue-on-error: true
        #         run: npm run coverage

        #         - name: Archive Coverage Report
        #         if: always()
        #         uses: actions/upload-artifact@v4
        #         with:
        #             name: Coverage-Report
        #             path: coverage
        #             retention-days: 5
        #     docker:
        #     name: Containerization
        #     needs: [code-coverage]
        #     permissions:
        #         packages: write
        #     runs-on: ubuntu-latest
        #     steps:
        #         - name: Checkout Repository
        #         uses: actions/checkout@v4

        #         - name: Login to Docker Hub
        #         uses: docker/login-action@v2
        #         with:
        #             username: ${{ secrets.DOCKER_USERNAME }}
        #             password: ${{ secrets.DOCKER_PASSWORD }}

        #         - name: GHCR Login
        #         uses: docker/login-action@v2
        #         with:
        #             registry: ghcr.io
        #             username: ${{ github.repository_owner }}
        #             password: ${{ secrets.GITHUB_TOKEN }}


        #         - name: Build Docker Image
        #         uses: docker/build-push-action@v4
        #         with:
        #             context: .
        #             file: Dockerfile
        #             push: false
        #             tags: ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                
        #         - name: Docker image testing
        #         run: |
        #             docker images
        #             docker run -d --name solar-system-app \
        #             -p 3000:3000  \
        #             -e MONGO_URI=$MONGO_URI   \
        #             -e MONGO_USERNAME=$MONGO_USERNAME \
        #             -e MONGO_PASSWORD=$MONGO_PASSWORD \
        #             ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

        #             export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
        #             echo $IP
        #             echo Testing Image URL using wget
        #             wget -qO - 127.0.0.1:3000/live | egrep live

        #         - name: Build Push  Image
        #         uses: docker/build-push-action@v4
        #         with:
        #             context: .
        #             file: Dockerfile
        #             push: true
        #             tags: ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

        #         - name: Dontainer registry push
        #         uses: docker/build-push-action@v4
        #         with:
        #             context: .
        #             push: true
        #             tags: |
        #             ${{ secrets.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
        #             ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}


      

            
        
